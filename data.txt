- Socket : joinUser
{
    "user_id": "63c7dde43c7070c4df51117a"
}


- Socket : chat
{
    "sender_id": "63ae8347ad6ae4296048bfeb",
    "receiver_id": "63ae8debcf146b1c502ba640",
    "message": "Hello!"
}
- emit : chatReceive


- Socket : readUnread
{
    "chat_room_id": "63c8cad60e4f2027fc6d533a",
    "user_id": "63c7dde43c7070c4df51117a"
}
- emit : readChat


- Socket : inviteGroup
{
    "user_id": "63c9157b4becc06796221948",
    "group_id": "640585b30afa74ab9e4f1142",
    "notification_img": "https://res.cloudinary.com/tcloud/image/upload/v1678083507/gcmefsf11cbpgcgwjxcg.png",
    "user_name": "test"
}


- Socket : joinGroup
{
    "user_id": "63c9157b4becc06796221948",
    "group_id": "640585b30afa74ab9e4f1142",
    "notification_img": "https://res.cloudinary.com/tcloud/image/upload/v1678083507/gcmefsf11cbpgcgwjxcg.png",
    "user_name": "test"
}

=======================================================================================================
exports.userList = async (req, res) => {
    try {

        let userId = req.params.id;
        let vehicleType = req.body.vehicle_type;
        let page = parseInt(req.query.page);
        let limit = parseInt(req.params.limit);

        // --- for pagination --- //
        const startIndex = (page - 1) * limit;
        const endIndex = page * limit;

        // --- get user whithout user that id pass --- //

        const getUser = await authModel.find({
            _id: { $ne: userId },
            status: "Active"
        }).skip(startIndex).limit(endIndex).select('-__v').sort({ createdAt: -1 });
        // console.log("getUser::", getUser);

        if (getUser.length == 0) {
            res.status(status.NOT_FOUND).json(
                {
                    message: "Data Not Exist",
                    status: true,
                    code: 200,
                    statusCode: 1,
                    data: []
                }
            )
        } else {

            const vehicleDetails = [];
            for (const userDetails of getUser) {

                var finalChatId = "";
                finalChatId = await chatRoomModel.find(
                    {
                        user1: userDetails._id,
                        user2: userId,
                    }
                );

                if (finalChatId.length == 0) {
                    finalChatId = await chatRoomModel.find(
                        {
                            user2: userDetails._id,
                            user1: userId,
                        }
                    );

                }
                else {

                }

                const arrVehicleData = [];
                var isVehicleData = false;
                for (const vehicleData of userDetails.vehicle) {

                    if (vehicleData.vehicle_type == vehicleType) {
                        isVehicleData = true;
                        const response = {
                            vehicleImageId: vehicleData.vehicle_img_id,
                            model: vehicleData.model,
                            type: vehicleData.vehicle_type,
                            year: vehicleData.year,
                            trim: vehicleData.trim,
                            dailyDriving: vehicleData.daily_driving,
                            unit: vehicleData.unit
                        }
                        arrVehicleData.push(response);
                    }
                }
                if (isVehicleData) {
                    const response = {
                        user_id: userDetails._id,
                        profile: userDetails.profile[0] ? userDetails.profile[0].res : "",
                        userName: userDetails.username,
                        email: userDetails.email,
                        phone: `${userDetails.country_code}${userDetails.phone_number}`,
                        chatRoomId: finalChatId[0] ? finalChatId[0]._id : "",
                        vehicles: arrVehicleData
                    }
                    vehicleDetails.push(response)
                }
            }
            // console.log("vehicleDetails", vehicleDetails);

            res.status(status.OK).json(
                {
                    message: "Get User Detail Successfully",
                    status: true,
                    code: 200,
                    statusCode: 1,
                    data: vehicleDetails
                }
            )

        }
    } catch (error) {

        console.log("userList-Error:", error);
        res.status(status.INTERNAL_SERVER_ERROR).json(
            {
                message: "Something Went Wrong",
                status: false,
                code: 500,
                statusCode: 0,
                error: error.message
            }
        )

    }
}
=======================================================================================================
